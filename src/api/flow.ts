/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * local-dev
 * OpenAPI spec version: 1.0.0
 */
import * as axios from "axios"
import type { AxiosRequestConfig, AxiosResponse } from "axios"
export type GetFlowId200 = { [key: string]: any }

export type GetFlowIdBody = {
  created_at: string
  /** @nullable */
  edges?: string | null
  id: number
  /** @nullable */
  nodes?: string | null
  title: string
}

export type DeleteFlowId204 = { [key: string]: any }

export type PutFlowId200 = { [key: string]: any }

export type PutFlowIdBody = {
  /** @nullable */
  edges?: string | null
  id: number
  /** @nullable */
  nodes?: string | null
  title: string
}

export type PostFlow200 = { [key: string]: any }

export type PostFlowBody = {
  /** @nullable */
  edges?: string | null
  /** @nullable */
  nodes?: string | null
  title: string
}

export interface FlowListObject {
  created_at: string
  id: number
  title: string
}

/**
 * @summary Ëé∑Âèñ flow ÂàóË°®
 */
export const getFlow = <TData = AxiosResponse<FlowListObject[]>>(options?: AxiosRequestConfig): Promise<TData> => {
  return axios.default.get(`/flow`, options)
}

/**
 * @summary ÂàõÂª∫ flow
 */
export const postFlow = <TData = AxiosResponse<PostFlow200>>(
  postFlowBody: PostFlowBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.default.post(`/flow`, postFlowBody, options)
}

/**
 * @summary Êõ¥Êñ∞ flow
 */
export const putFlowId = <TData = AxiosResponse<PutFlowId200>>(
  id: number,
  putFlowIdBody: PutFlowIdBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.default.put(`/flow/${id}`, putFlowIdBody, options)
}

/**
 * @summary Âà†Èô§ flow
 */
export const deleteFlowId = <TData = AxiosResponse<DeleteFlowId204>>(
  id: string,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.default.delete(`/flow/${id}`, options)
}

/**
 * @summary Ëé∑Âèñ flow
 */
export const getFlowId = <TData = AxiosResponse<GetFlowId200>>(
  id: string,
  getFlowIdBody: GetFlowIdBody,
  options?: AxiosRequestConfig,
): Promise<TData> => {
  return axios.default.get(`/flow/${id}`, options)
}

export type GetFlowResult = AxiosResponse<FlowListObject[]>
export type PostFlowResult = AxiosResponse<PostFlow200>
export type PutFlowIdResult = AxiosResponse<PutFlowId200>
export type DeleteFlowIdResult = AxiosResponse<DeleteFlowId204>
export type GetFlowIdResult = AxiosResponse<GetFlowId200>
