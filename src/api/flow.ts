/**
 * Generated by orval v6.29.1 🍺
 * Do not edit manually.
 * 流程编辑器 API
 * OpenAPI spec version: 0.0.1
 */
import { customInstance } from "../lib/http/instance"
import type { BodyType } from "../lib/http/instance"
export interface UpdateFlowData {
  /** flow 边 */
  edges?: string
  /** flow 节点 */
  nodes?: string
  /** flow 标题 */
  title?: string
}

export interface FlowListItem {
  /** flow 创建时间 */
  created_at: string
  /** flow id */
  id: number
  /** flow 标题 */
  title: string
}

export interface FlowDetail {
  /** flow 创建时间 */
  created_at: string
  /** flow 边 */
  edges?: string
  /** flow id */
  id: number
  /** flow 节点 */
  nodes?: string
  /** flow 标题 */
  title: string
}

export interface CreateFlowRequestBody {
  /** flow 边 */
  edges?: string
  /** flow 节点 */
  nodes?: string
  /** flow 标题 */
  title: string
}

export interface AccountInfo {
  activated: boolean
  membership: number
}

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1]

/**
 * 列出当前用户拥有的 flow
 * @summary getFlowList flow
 */
export const getFlowList = (options?: SecondParameter<typeof customInstance>) => {
  return customInstance<FlowListItem[]>({ url: `/flow`, method: "GET" }, options)
}

/**
 * 创建 flow
 * @summary createFlow flow
 */
export const createFlow = (
  createFlowRequestBody: BodyType<CreateFlowRequestBody>,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<FlowDetail>(
    { url: `/flow`, method: "POST", headers: { "Content-Type": "application/json" }, data: createFlowRequestBody },
    options,
  )
}

/**
 * 删除 flow
 * @summary deleteFlow flow
 */
export const deleteFlow = (id: string, options?: SecondParameter<typeof customInstance>) => {
  return customInstance<void>({ url: `/flow/${id}`, method: "DELETE" }, options)
}

/**
 * 根据 flow id 获取 flow 详情
 * @summary getFlow flow
 */
export const getFlow = (id: string, options?: SecondParameter<typeof customInstance>) => {
  return customInstance<FlowDetail>({ url: `/flow/${id}`, method: "GET" }, options)
}

/**
 * 更新 flow
 * @summary updateFlow flow
 */
export const updateFlow = (
  id: string,
  updateFlowData: BodyType<UpdateFlowData>,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<FlowDetail>(
    { url: `/flow/${id}`, method: "PUT", headers: { "Content-Type": "application/json" }, data: updateFlowData },
    options,
  )
}

/**
 * 复制 flow
 * @summary copyFlow flow
 */
export const copyFlow = (id: string, options?: SecondParameter<typeof customInstance>) => {
  return customInstance<void>({ url: `/flow/${id}/copy`, method: "POST" }, options)
}

export type GetFlowListResult = NonNullable<Awaited<ReturnType<typeof getFlowList>>>
export type CreateFlowResult = NonNullable<Awaited<ReturnType<typeof createFlow>>>
export type DeleteFlowResult = NonNullable<Awaited<ReturnType<typeof deleteFlow>>>
export type GetFlowResult = NonNullable<Awaited<ReturnType<typeof getFlow>>>
export type UpdateFlowResult = NonNullable<Awaited<ReturnType<typeof updateFlow>>>
export type CopyFlowResult = NonNullable<Awaited<ReturnType<typeof copyFlow>>>
