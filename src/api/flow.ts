/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * Flow Editor
 * Flow Editor APIs
 * OpenAPI spec version: 1.0
 */
import { customInstance } from "../lib/http/instance"
import type { BodyType } from "../lib/http/instance"
export interface FlowUpdateFlowInput {
  edges?: string
  id: number
  nodes?: string
  owner?: string
  title: string
}

export interface FlowFlowListObjectOutput {
  created_at: string
  id: number
  title: string
}

export interface FlowFlowDetailOutput {
  created_at: string
  edges?: string
  id: number
  nodes?: string
  title: string
}

export interface FlowCreateFlowInput {
  edges?: string
  nodes?: string
  owner?: string
  title: string
}

export interface AccountAccountOutput {
  activated: boolean
  membership: number
}

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1]

/**
 * @summary get flow list
 */
export const getFlow = (options?: SecondParameter<typeof customInstance>) => {
  return customInstance<FlowFlowListObjectOutput[]>({ url: `/flow`, method: "GET" }, options)
}

/**
 * @summary create flow
 */
export const postFlow = (
  flowCreateFlowInput: BodyType<FlowCreateFlowInput>,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<FlowFlowDetailOutput>(
    { url: `/flow`, method: "POST", headers: { "Content-Type": "application/json" }, data: flowCreateFlowInput },
    options,
  )
}

/**
 * @summary get flow detail
 */
export const getFlowId = (id: string, options?: SecondParameter<typeof customInstance>) => {
  return customInstance<FlowFlowDetailOutput>({ url: `/flow/${id}`, method: "GET" }, options)
}

/**
 * @summary update flow
 */
export const putFlowId = (
  id: string,
  flowUpdateFlowInput: BodyType<FlowUpdateFlowInput>,
  options?: SecondParameter<typeof customInstance>,
) => {
  return customInstance<FlowFlowDetailOutput>(
    { url: `/flow/${id}`, method: "PUT", headers: { "Content-Type": "application/json" }, data: flowUpdateFlowInput },
    options,
  )
}

/**
 * @summary delete flow
 */
export const deleteFlowId = (id: string, options?: SecondParameter<typeof customInstance>) => {
  return customInstance<void>({ url: `/flow/${id}`, method: "DELETE" }, options)
}

export type GetFlowResult = NonNullable<Awaited<ReturnType<typeof getFlow>>>
export type PostFlowResult = NonNullable<Awaited<ReturnType<typeof postFlow>>>
export type GetFlowIdResult = NonNullable<Awaited<ReturnType<typeof getFlowId>>>
export type PutFlowIdResult = NonNullable<Awaited<ReturnType<typeof putFlowId>>>
export type DeleteFlowIdResult = NonNullable<Awaited<ReturnType<typeof deleteFlowId>>>
