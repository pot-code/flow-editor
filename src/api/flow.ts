/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * local-dev
 * OpenAPI spec version: 1.0.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type GetFlowId200 = { [key: string]: any };

export type GetFlowIdBody = {
  created_at: string;
  edges: string;
  id: number;
  nodes: string;
  title: string;
};

export type DeleteFlowId204 = { [key: string]: any };

export type PutFlow200 = { [key: string]: any };

export type PutFlowBody = {
  edges: string;
  id: string;
  nodes: string;
  title: string;
};

export type PostFlow200 = { [key: string]: any };

export type PostFlowBody = {
  edges: string;
  nodes: string;
  title: string;
};

export type GetFlow200 = { [key: string]: any };

export type GetFlowBodyItem = {
  created_at: string;
  id: number;
  title: string;
};





  /**
 * @summary Ëé∑Âèñ flow ÂàóË°®
 */
export const getFlow = <TData = AxiosResponse<GetFlow200>>(
    getFlowBodyItem: GetFlowBodyItem[], options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/flow`,options
    );
  }

/**
 * @summary ÂàõÂª∫ flow
 */
export const postFlow = <TData = AxiosResponse<PostFlow200>>(
    postFlowBody: PostFlowBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/flow`,
      postFlowBody,options
    );
  }

/**
 * @summary Êõ¥Êñ∞ flow
 */
export const putFlow = <TData = AxiosResponse<PutFlow200>>(
    putFlowBody: PutFlowBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.put(
      `/flow`,
      putFlowBody,options
    );
  }

/**
 * @summary Âà†Èô§ flow
 */
export const deleteFlowId = <TData = AxiosResponse<DeleteFlowId204>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.delete(
      `/flow/${id}`,options
    );
  }

/**
 * @summary Ëé∑Âèñ flow
 */
export const getFlowId = <TData = AxiosResponse<GetFlowId200>>(
    id: string,
    getFlowIdBody: GetFlowIdBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/flow/${id}`,options
    );
  }

export type GetFlowResult = AxiosResponse<GetFlow200>
export type PostFlowResult = AxiosResponse<PostFlow200>
export type PutFlowResult = AxiosResponse<PutFlow200>
export type DeleteFlowIdResult = AxiosResponse<DeleteFlowId204>
export type GetFlowIdResult = AxiosResponse<GetFlowId200>
